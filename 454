typedef struct {
    int value;
    int index;
} Pair;

int cmp(const void*a, const void *b){
    return ((Pair*)a)->value-((Pair*)b)->value;
}

int* twoSum(int* nums, int numsSize, int target, int* returnSize) {

    Pair* arr = (Pair*)malloc(numsSize*sizeof(Pair));

    for(int i = 0;i<numsSize;i++){
        arr[i].value = nums[i];
        arr[i].index = i;

    }

    qsort(arr, numsSize, sizeof(Pair), cmp);

    int *start = nums;
    int *end = nums+numsSize-1;
    int *result = (int*)malloc(2*sizeof(int));


    int left = 0, right = numsSize - 1;
    while (left < right) {
        int sum = arr[left].value + arr[right].value;

        if (sum == target) {
            int* result = (int*)malloc(2 * sizeof(int));
            result[0] = arr[left].index;
            result[1] = arr[right].index;
            *returnSize = 2;
            free(arr);
            return result;
        }
        else if (sum < target) {
            left++;
        }
        else {
            right--;
        }
    }

    *returnSize=0;
    free(arr);
    return NULL;

    
}
