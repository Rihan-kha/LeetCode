int partitionDisjoint(int* nums, int numsSize) {
    int left_arr = nums[0];
    int max_left = nums[0];
    int index = 0;

    for (int i = 1 ; i< numsSize ; i++){
        if (nums[i]<left_arr){
            index = i;
            left_arr = max_left;
        }
        else if (nums[i]>max_left){
            max_left = nums[i];
        }
    }
    return index+1;
    
}

////////////////////////
class Solution {
public:
    int partitionDisjoint(vector<int>& nums) {
        int n = nums.size();
        vector<int> prefixmax(n),suffixmin(n);
        prefixmax[0]=nums[0];
        for(int i = 1 ; i<n;i++){
            prefixmax[i] = max(prefixmax[i-1],nums[i]);
        }
        suffixmin[n-1]=nums[n-1];
        for(int i=n-2;i>=0;i--){
            suffixmin[i]=min(suffixmin[i+1],nums[i]);
        }
        for(int i=0;i<=n-2;i++){
            if(prefixmax[i]<=suffixmin[i+1])
            return i+1;
        }
        return n;
       
    }
   
};
